/**
 * @fileoverview added by tsickle
 * Generated from: lib/st-dynamic-table/utils/st-dynamic-table.utils.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*
 * © 2017 Stratio Big Data Inc., Sucursal en España.
 *
 * This software is licensed under the Apache License, Version 2.0.
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the terms of the License for more details.
 *
 * SPDX-License-Identifier: Apache-2.0.
 */
var StDynamicTableUtils = /** @class */ (function () {
    function StDynamicTableUtils() {
    }
    /**
     * @param {?} jsonSchema
     * @param {?=} uiDefinitions
     * @return {?}
     */
    StDynamicTableUtils.getHeaderFieldsFromJsonSchema = /**
     * @param {?} jsonSchema
     * @param {?=} uiDefinitions
     * @return {?}
     */
    function (jsonSchema, uiDefinitions) {
        /** @type {?} */
        var fields = [];
        if (jsonSchema && jsonSchema.properties) {
            /** @type {?} */
            var properties = Object.keys(jsonSchema.properties);
            if (properties) {
                properties.forEach((/**
                 * @param {?} _propertyKey
                 * @return {?}
                 */
                function (_propertyKey) {
                    /** @type {?} */
                    var _property = jsonSchema.properties[_propertyKey];
                    if (_property && _property.type !== 'object') {
                        /** @type {?} */
                        var uiDefinition = uiDefinitions && uiDefinitions[_propertyKey];
                        /** @type {?} */
                        var filters = StDynamicTableUtils.getHeaderFiltersFromJsonSchema(_property, uiDefinition);
                        /** @type {?} */
                        var isSortable = uiDefinition && uiDefinitions[_propertyKey].sortable;
                        fields.push({
                            id: _propertyKey,
                            label: _property.title || _propertyKey,
                            reference: _property.$ref,
                            fk: uiDefinition && uiDefinition.fk,
                            group: uiDefinition && uiDefinition.group_field ? uiDefinition.group_field.name : null,
                            filters: filters,
                            filterable: filters && (filters.templateRef !== undefined || (filters.filterConfig && filters.filterConfig.length > 0)),
                            sortable: isSortable
                        });
                    }
                }));
            }
        }
        return fields;
    };
    /**
     * @param {?} propertyDefinition
     * @param {?} uiDefinition
     * @return {?}
     */
    StDynamicTableUtils.getHeaderFiltersFromJsonSchema = /**
     * @param {?} propertyDefinition
     * @param {?} uiDefinition
     * @return {?}
     */
    function (propertyDefinition, uiDefinition) {
        /** @type {?} */
        var filters;
        if (propertyDefinition.enum && propertyDefinition.enum.length) {
            filters = {
                title: propertyDefinition.title,
                filterConfig: []
            };
            propertyDefinition.enum.forEach((/**
             * @param {?} _value
             * @return {?}
             */
            function (_value) {
                filters.filterConfig.push({
                    id: (/** @type {?} */ (_value)),
                    name: (/** @type {?} */ (_value))
                });
            }));
        }
        else if (uiDefinition && uiDefinition.templateRef) {
            filters = {
                title: propertyDefinition.title,
                templateRef: uiDefinition.templateRef
            };
        }
        return filters;
    };
    return StDynamicTableUtils;
}());
export { StDynamicTableUtils };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3QtZHluYW1pYy10YWJsZS51dGlscy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BzdHJhdGlvL2VnZW8vIiwic291cmNlcyI6WyJsaWIvc3QtZHluYW1pYy10YWJsZS91dGlscy9zdC1keW5hbWljLXRhYmxlLnV0aWxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQWVBO0lBQUE7SUFzREEsQ0FBQzs7Ozs7O0lBcERnQixpREFBNkI7Ozs7O0lBQTNDLFVBQTRDLFVBQXVCLEVBQUUsYUFBMkM7O1lBQ3ZHLE1BQU0sR0FBMkIsRUFBRTtRQUV6QyxJQUFJLFVBQVUsSUFBSSxVQUFVLENBQUMsVUFBVSxFQUFFOztnQkFDaEMsVUFBVSxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLFVBQVUsQ0FBQztZQUNyRCxJQUFJLFVBQVUsRUFBRTtnQkFDYixVQUFVLENBQUMsT0FBTzs7OztnQkFBQyxVQUFBLFlBQVk7O3dCQUN0QixTQUFTLEdBQUcsVUFBVSxDQUFDLFVBQVUsQ0FBQyxZQUFZLENBQUM7b0JBQ3JELElBQUksU0FBUyxJQUFJLFNBQVMsQ0FBQyxJQUFJLEtBQUssUUFBUSxFQUFFOzs0QkFDckMsWUFBWSxHQUFrQyxhQUFhLElBQUksYUFBYSxDQUFDLFlBQVksQ0FBQzs7NEJBQzFGLE9BQU8sR0FBbUIsbUJBQW1CLENBQUMsOEJBQThCLENBQUMsU0FBUyxFQUFFLFlBQVksQ0FBQzs7NEJBQ3JHLFVBQVUsR0FBRyxZQUFZLElBQUksYUFBYSxDQUFDLFlBQVksQ0FBQyxDQUFDLFFBQVE7d0JBRXZFLE1BQU0sQ0FBQyxJQUFJLENBQUM7NEJBQ1QsRUFBRSxFQUFFLFlBQVk7NEJBQ2hCLEtBQUssRUFBRSxTQUFTLENBQUMsS0FBSyxJQUFJLFlBQVk7NEJBQ3RDLFNBQVMsRUFBRSxTQUFTLENBQUMsSUFBSTs0QkFDekIsRUFBRSxFQUFFLFlBQVksSUFBSSxZQUFZLENBQUMsRUFBRTs0QkFDbkMsS0FBSyxFQUFFLFlBQVksSUFBSSxZQUFZLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSTs0QkFDdEYsT0FBTyxFQUFFLE9BQU87NEJBQ2hCLFVBQVUsRUFBRSxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsV0FBVyxLQUFLLFNBQVMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxZQUFZLElBQUksT0FBTyxDQUFDLFlBQVksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUM7NEJBQ3ZILFFBQVEsRUFBRSxVQUFVO3lCQUN0QixDQUFDLENBQUM7cUJBQ0w7Z0JBQ0osQ0FBQyxFQUFDLENBQUM7YUFDTDtTQUNIO1FBQ0QsT0FBTyxNQUFNLENBQUM7SUFDakIsQ0FBQzs7Ozs7O0lBRWEsa0RBQThCOzs7OztJQUE1QyxVQUE2QyxrQkFBK0IsRUFBRSxZQUEyQzs7WUFDbEgsT0FBdUI7UUFDM0IsSUFBSSxrQkFBa0IsQ0FBQyxJQUFJLElBQUksa0JBQWtCLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRTtZQUM1RCxPQUFPLEdBQUc7Z0JBQ1AsS0FBSyxFQUFFLGtCQUFrQixDQUFDLEtBQUs7Z0JBQy9CLFlBQVksRUFBRSxFQUFFO2FBQ2xCLENBQUM7WUFDRixrQkFBa0IsQ0FBQyxJQUFJLENBQUMsT0FBTzs7OztZQUFDLFVBQUEsTUFBTTtnQkFDbkMsT0FBTyxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUM7b0JBQ3ZCLEVBQUUsRUFBRSxtQkFBTSxNQUFNLEVBQUE7b0JBQ2hCLElBQUksRUFBRSxtQkFBTSxNQUFNLEVBQUE7aUJBQ3BCLENBQUMsQ0FBQztZQUNOLENBQUMsRUFBQyxDQUFDO1NBQ0w7YUFBTSxJQUFJLFlBQVksSUFBSSxZQUFZLENBQUMsV0FBVyxFQUFFO1lBQ2xELE9BQU8sR0FBRztnQkFDUCxLQUFLLEVBQUUsa0JBQWtCLENBQUMsS0FBSztnQkFDL0IsV0FBVyxFQUFFLFlBQVksQ0FBQyxXQUFXO2FBQ3ZDLENBQUM7U0FDSjtRQUVELE9BQU8sT0FBTyxDQUFDO0lBQ2xCLENBQUM7SUFDSiwwQkFBQztBQUFELENBQUMsQUF0REQsSUFzREMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogwqkgMjAxNyBTdHJhdGlvIEJpZyBEYXRhIEluYy4sIFN1Y3Vyc2FsIGVuIEVzcGHDsWEuXG4gKlxuICogVGhpcyBzb2Z0d2FyZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wLlxuICogVGhpcyBwcm9ncmFtIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTtcbiAqIHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZiBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuXG4gKiBTZWUgdGhlIHRlcm1zIG9mIHRoZSBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG4gKlxuICogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEFwYWNoZS0yLjAuXG4gKi9cblxuaW1wb3J0IHsgSlNPTlNjaGVtYTQgfSBmcm9tICdqc29uLXNjaGVtYSc7XG5pbXBvcnQgeyBTdER5bmFtaWNUYWJsZUhlYWRlciwgU3REeW5hbWljVGFibGVVSVNwZWNpZmljYXRpb24sIFN0RHluYW1pY1RhYmxlVXNlckludGVyZmFjZSB9IGZyb20gJy4uL3N0LWR5bmFtaWMtdGFibGUubW9kZWwnO1xuaW1wb3J0IHsgU3RGaWx0ZXJIZWFkZXIgfSBmcm9tICcuLi8uLi9zdC10YWJsZS9zaGFyZWQvdGFibGUtaGVhZGVyLmludGVyZmFjZSc7XG5cbmV4cG9ydCBjbGFzcyBTdER5bmFtaWNUYWJsZVV0aWxzIHtcblxuICAgcHVibGljIHN0YXRpYyBnZXRIZWFkZXJGaWVsZHNGcm9tSnNvblNjaGVtYShqc29uU2NoZW1hOiBKU09OU2NoZW1hNCwgdWlEZWZpbml0aW9ucz86IFN0RHluYW1pY1RhYmxlVXNlckludGVyZmFjZSk6IFN0RHluYW1pY1RhYmxlSGVhZGVyW10ge1xuICAgICAgY29uc3QgZmllbGRzOiBTdER5bmFtaWNUYWJsZUhlYWRlcltdID0gW107XG5cbiAgICAgIGlmIChqc29uU2NoZW1hICYmIGpzb25TY2hlbWEucHJvcGVydGllcykge1xuICAgICAgICAgY29uc3QgcHJvcGVydGllcyA9IE9iamVjdC5rZXlzKGpzb25TY2hlbWEucHJvcGVydGllcyk7XG4gICAgICAgICBpZiAocHJvcGVydGllcykge1xuICAgICAgICAgICAgcHJvcGVydGllcy5mb3JFYWNoKF9wcm9wZXJ0eUtleSA9PiB7XG4gICAgICAgICAgICAgICBjb25zdCBfcHJvcGVydHkgPSBqc29uU2NoZW1hLnByb3BlcnRpZXNbX3Byb3BlcnR5S2V5XTtcbiAgICAgICAgICAgICAgIGlmIChfcHJvcGVydHkgJiYgX3Byb3BlcnR5LnR5cGUgIT09ICdvYmplY3QnKSB7XG4gICAgICAgICAgICAgICAgICBjb25zdCB1aURlZmluaXRpb246IFN0RHluYW1pY1RhYmxlVUlTcGVjaWZpY2F0aW9uID0gdWlEZWZpbml0aW9ucyAmJiB1aURlZmluaXRpb25zW19wcm9wZXJ0eUtleV07XG4gICAgICAgICAgICAgICAgICBjb25zdCBmaWx0ZXJzOiBTdEZpbHRlckhlYWRlciA9IFN0RHluYW1pY1RhYmxlVXRpbHMuZ2V0SGVhZGVyRmlsdGVyc0Zyb21Kc29uU2NoZW1hKF9wcm9wZXJ0eSwgdWlEZWZpbml0aW9uKTtcbiAgICAgICAgICAgICAgICAgIGNvbnN0IGlzU29ydGFibGUgPSB1aURlZmluaXRpb24gJiYgdWlEZWZpbml0aW9uc1tfcHJvcGVydHlLZXldLnNvcnRhYmxlO1xuXG4gICAgICAgICAgICAgICAgICBmaWVsZHMucHVzaCh7XG4gICAgICAgICAgICAgICAgICAgICBpZDogX3Byb3BlcnR5S2V5LFxuICAgICAgICAgICAgICAgICAgICAgbGFiZWw6IF9wcm9wZXJ0eS50aXRsZSB8fCBfcHJvcGVydHlLZXksXG4gICAgICAgICAgICAgICAgICAgICByZWZlcmVuY2U6IF9wcm9wZXJ0eS4kcmVmLFxuICAgICAgICAgICAgICAgICAgICAgZms6IHVpRGVmaW5pdGlvbiAmJiB1aURlZmluaXRpb24uZmssXG4gICAgICAgICAgICAgICAgICAgICBncm91cDogdWlEZWZpbml0aW9uICYmIHVpRGVmaW5pdGlvbi5ncm91cF9maWVsZCA/IHVpRGVmaW5pdGlvbi5ncm91cF9maWVsZC5uYW1lIDogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgIGZpbHRlcnM6IGZpbHRlcnMsXG4gICAgICAgICAgICAgICAgICAgICBmaWx0ZXJhYmxlOiBmaWx0ZXJzICYmIChmaWx0ZXJzLnRlbXBsYXRlUmVmICE9PSB1bmRlZmluZWQgfHwgKGZpbHRlcnMuZmlsdGVyQ29uZmlnICYmIGZpbHRlcnMuZmlsdGVyQ29uZmlnLmxlbmd0aCA+IDApKSxcbiAgICAgICAgICAgICAgICAgICAgIHNvcnRhYmxlOiBpc1NvcnRhYmxlXG4gICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIGZpZWxkcztcbiAgIH1cblxuICAgcHVibGljIHN0YXRpYyBnZXRIZWFkZXJGaWx0ZXJzRnJvbUpzb25TY2hlbWEocHJvcGVydHlEZWZpbml0aW9uOiBKU09OU2NoZW1hNCwgdWlEZWZpbml0aW9uOiBTdER5bmFtaWNUYWJsZVVJU3BlY2lmaWNhdGlvbik6IFN0RmlsdGVySGVhZGVyIHtcbiAgICAgIGxldCBmaWx0ZXJzOiBTdEZpbHRlckhlYWRlcjtcbiAgICAgIGlmIChwcm9wZXJ0eURlZmluaXRpb24uZW51bSAmJiBwcm9wZXJ0eURlZmluaXRpb24uZW51bS5sZW5ndGgpIHtcbiAgICAgICAgIGZpbHRlcnMgPSB7XG4gICAgICAgICAgICB0aXRsZTogcHJvcGVydHlEZWZpbml0aW9uLnRpdGxlLFxuICAgICAgICAgICAgZmlsdGVyQ29uZmlnOiBbXVxuICAgICAgICAgfTtcbiAgICAgICAgIHByb3BlcnR5RGVmaW5pdGlvbi5lbnVtLmZvckVhY2goX3ZhbHVlID0+IHtcbiAgICAgICAgICAgIGZpbHRlcnMuZmlsdGVyQ29uZmlnLnB1c2goe1xuICAgICAgICAgICAgICAgaWQ6IDxhbnk+IF92YWx1ZSxcbiAgICAgICAgICAgICAgIG5hbWU6IDxhbnk+IF92YWx1ZVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSBpZiAodWlEZWZpbml0aW9uICYmIHVpRGVmaW5pdGlvbi50ZW1wbGF0ZVJlZikge1xuICAgICAgICAgZmlsdGVycyA9IHtcbiAgICAgICAgICAgIHRpdGxlOiBwcm9wZXJ0eURlZmluaXRpb24udGl0bGUsXG4gICAgICAgICAgICB0ZW1wbGF0ZVJlZjogdWlEZWZpbml0aW9uLnRlbXBsYXRlUmVmXG4gICAgICAgICB9O1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gZmlsdGVycztcbiAgIH1cbn1cbiJdfQ==